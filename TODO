----------
TODO LIST:
    - Create NetworkGame derived class from Game (weights for network activity, calculates move, sends move, etc.)
    
    - Figure out who won a game, modify performance score
    
    - Implement Tournament class with functions
    
    - Store NeuralNetworks as C++11 std::array (in tournament) http://stackoverflow.com/a/11134514

----------
Noah:
    - Implement color swapping logic in Game class (see gameplay.cpp in test_code)
    
    - Fix broken include paths (caused by repo restructure)

----------
Lonny:


----------
DONE:
    - Create NeuralNetwork member function: saveWeights (see writeMatriciesToFile.cpp in test_code)
    
    - Create NeuralNetwork member function: generateBoards (see boardGeneration.cpp in test_code)
    
    - Implement Game class with functions (see gameplay.cpp in test_code)
    
    - Return chosen board move in tree search NegaScout instead of double (see treeSearch.cpp in test_code)
    
    - Create NeuralNetwork member function: treeSearch (see treeSearch.cpp in test_code)
    
    - Board evluation needs to go inside NeuralNetwork class
